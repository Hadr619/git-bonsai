#!/usr/bin/env node
const chalk = require('chalk')
const args = process.argv
var Git = require("nodegit")
const simplegit = require('simple-git')
let Promise = require('promise')
let path = require("path")
const commands = ['pruneAll', 'prune', 'help']

const usage = function() {
  const usageText = `
  git-bonsai helps you prune branches merged to master.

  usage:
    git-bonsai <command>

    commands can be:
  `

  console.log(usageText)
}
// used to log errors to the console in red color
function errorLog(error) {
  const eLog = chalk.red(error)
  console.log(eLog)
}

// we make sure the length of the arguments is exactly three
if (args.length > 3) {
  errorLog(`only one argument can be accepted`)
  usage()
}

if (commands.indexOf(args[2]) == -1) {
  errorLog('invalid command passed')
  usage()
}

switch(args[2]) {
  case 'pruneAll':
  checkFlags()
    break
  case 'prune':
  checkBranch()
    break
  case 'help':
    usage()
    break

  default:
    errorLog('invalid command passed')
}

function checkBranch(){
	console.log(__dirname )
Git.Repository.open('/mnt/c/devel/wasp').then(function(repo) {
  /* Get the current branch. */
  return repo.getCurrentBranch().then(function(ref) {
    console.log("On " + ref.shorthand() + " (" + ref.target() + ")");

    /* Get the commit that the branch points at. */
    return repo.getBranchCommit(ref.shorthand());
  }).then(function (commit) {
    /* Set up the event emitter and a promise to resolve when it finishes up. */
    var hist = commit.history(),
        p = new Promise(function(resolve, reject) {
            hist.on("end", resolve);
            hist.on("error", reject);
        });
    hist.start();
    return p;
  }).then(function (commits) {

    /* Iterate through the last 10 commits of the history. */
    for (var i = 0; i < 10; i++) {
      var sha = commits[i].sha().substr(0,7),
          msg = commits[i].message().split('\n')[0];
      console.log(sha + " " + msg);
    }
  });
}).catch(function (err) {
  console.log(err);
}).done(function () {
  console.log('Finished');
});
}

function checkFlags(){
	console.log('TACO')

require('simple-git')('/mnt/c/devel/cms')
	.checkout('master')
	
    .branch('--merged', (err, data) => {
        if (!err) {
       		console.log(data.all.length);
            //console.log(data.all);
            for(var i=0; i < data.all.length; i++){
            	console.log(data.all[i]);
            }
        }
    });

}