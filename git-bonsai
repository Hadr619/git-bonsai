#!/usr/bin/env node
const chalk = require('chalk')
const args = process.argv
const simplegit = require('simple-git')
let Promise = require('promise')
let path = require("path")
const commands = ['pruneAll', 'prune', 'help']

const usage = function() {
  const usageText = `
  git-bonsai helps you prune branches merged to master.

  usage:
    git-bonsai <command>

    commands can be:
  `

  console.log(usageText)
}
// used to log errors to the console in red color
function errorLog(error) {
  const eLog = chalk.red(error)
  console.log(eLog)
}

// we make sure the length of the arguments is exactly three
if (args.length > 3) {
  errorLog(`only one argument can be accepted`)
  usage()
}

if (commands.indexOf(args[2]) == -1) {
  errorLog('invalid command passed')
  usage()
}

switch(args[2]) {
  case 'pruneAll':
  checkFlags()
    break
  case 'prune':
  checkBranch()
    break
  case 'help':
    usage()
    break

  default:
    errorLog('invalid command passed')
}

function checkBranch(){
require('simple-git')('/mnt/c/workspace/merging')
.branchLocal()
.revparse(['--abbrev-ref','HEAD'] , (err, data) => {
	if(!err){
		console.log(data);		
	}
});
}

function checkFlags(){
	console.log('TACO')

require('simple-git')('/mnt/c/workspace/merging')
	.checkout('master')	
    .branch(['--merged', 'master'], (err, data) => {
        if (!err) {
            for(var i=0; i < data.all.length; i++){
            	console.log(data.all[i]);
            }
        }
    });
}